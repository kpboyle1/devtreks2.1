@using DevTreks.Helpers;
@using DevTreks.Data.Helpers;
@using DevTreks.Data.AppHelpers;
@using DevTreks.Data;
@using DevTreks.Models;
@using DevTreks.Data.RuleHelpers;


@model DevTreks.Data.ContentURI
@{
    bool bCanDelete = AppHelper.CanDeleteNode(
      @Model.URINodeName, Prices.INPUT_PRICE_TYPES.input.ToString(),
      Model.URIDataManager.ServerActionType, Model.URIMember);

    string searchurl = StylesheetHelper.GetURIPattern(Model.URIModels.Input.Name, Model.URIModels.Input.PKId.ToString(),
                Model.URINetworkPartName, Prices.INPUT_PRICE_TYPES.input.ToString(), string.Empty);
    if (Model.URINodeName == Prices.INPUT_PRICE_TYPES.input.ToString())
    {
        //only collections can be edited (conserve db hits)
       @HtmlHelperExtensions.MakeName(Html, string.Empty, @Model.URIModels.Input.Name,
            "Name", GeneralHelpers.VIEW_EDIT_TYPES.part, bCanDelete)
        if (Model.URIDataManager.EditViewEditType
            == GeneralHelpers.VIEW_EDIT_TYPES.full)
        {
            @HtmlHelperExtensions.MakeAddDefaultNodeButton(Html, Model, "Input Series",
                Prices.INPUT_PRICE_TYPES.inputseries.ToString())                 
        }
        else 
        {
            @Html.H4("Input Series", "ui-bar-b")
        }
        if (Model.URIModels.Input.InputSeries != null)
        {
            if (Model.URIModels.Input.InputSeries.Count > 0)
            {
                foreach (var inputseries in Model.URIModels.Input.InputSeries)
                {
                    ViewData.Model.URIModels.InputSeries = inputseries;
                    @Html.DivCollapseStart(Model, inputseries.PKId)
                    <h4>@inputseries.Name</h4>
                    @await Html.PartialAsync("ContentModelViews/_InputSeries", ViewData.Model)
                    @Html.DivEnd()
                }
            }
        }
    }
    else
    {
        @HtmlHelperExtensions.MakeName(Html, @searchurl, @Model.URIModels.Input.Name,
                 "Name", Model.URIDataManager.EditViewEditType, bCanDelete)
        
        @Html.DivStart(string.Empty, "ui-grid-a")
        @Html.DivStart(string.Empty, "ui-block-a")
        @Html.LabelStrong("InputLastChangedDate", "Date Changed:")
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                          Model.URIModels.Input.InputLastChangedDate.ToShortDateString(), "InputLastChangedDate", GeneralRules.SHORTDATE, "8",
                "Input75Center", string.Empty)
        @Html.DivEnd()
        @Html.DivStart(string.Empty, "ui-block-b")
        @Html.LabelStrong("Num", "Label:")
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                     Model.URIModels.Input.Num, "Num", GeneralRules.STRING, "15",
            "Input75Center", string.Empty)
        @Html.DivEnd()
        @Html.DivEnd()

        @Html.DivStart(string.Empty, "ui-grid-a")
        @Html.DivStart(string.Empty, "ui-block-a")
        @Html.LabelStrong("InputDate", "Date:")
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                Model.URIModels.Input.InputDate.ToShortDateString(), "InputDate", GeneralRules.DATE, "8",
                "Input75Center", string.Empty)
        @Html.DivEnd()
        @Html.DivStart(string.Empty, "ui-block-b")
        @Html.LabelStrong("InputPrice1Amount", "OC Amount:")
        string sFormatted = StylesheetHelper.WriteFormattedNumber("InputPrice1Amount", Model.URIModels.Input.InputPrice1Amount.ToString(), GeneralRules.FLOAT, "4");
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                sFormatted, "InputPrice1Amount", GeneralRules.FLOAT, "4",
            "Input75Center", string.Empty)
        @Html.DivEnd()
        @Html.DivEnd()

        @Html.DivStart(string.Empty, "ui-grid-a")
        @Html.DivStart(string.Empty, "ui-block-a")
        @Html.LabelStrong("InputPrice1", "OC Price:")
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                     Model.URIModels.Input.InputPrice1.ToString(), "InputPrice1", GeneralRules.DECIMAL, "8",
                "Input75Center", string.Empty)
        @Html.DivEnd()
        @Html.DivStart(string.Empty, "ui-block-b")
        @Html.LabelStrong("InputUnit1", "OC Unit:")
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                     Model.URIModels.Input.InputUnit1, "InputUnit1", GeneralRules.STRING, "75",
                "Input75Center", string.Empty)
        @*2.0.0 refactored out -too many units and unit systems for select lists
            @Html.SelectUnitStart(
            Model.URIDataManager.EditViewEditType, searchurl,
            Model.URIModels.Input.InputUnit1, "InputUnit1", GeneralRules.STRING, "75",
            "SelectUnits", Model.URIModels.Input.UnitClassId.ToString(), string.Empty)
        @Html.Option(Model.URIModels.Input.InputUnit1, Model.URIModels.Input.InputUnit1, true);
        @Html.SelectEnd();*@
        @Html.DivEnd()
        @Html.DivEnd()

        @Html.DivStart(string.Empty, "ui-grid-a")
        @Html.DivStart(string.Empty, "ui-block-a")
        @Html.LabelStrong("InputPrice2", "AOH Price:")
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                          Model.URIModels.Input.InputPrice2.ToString(), "InputPrice2", GeneralRules.DECIMAL, "8",
                "Input75Center", string.Empty)
        @Html.DivEnd()
        @Html.DivStart(string.Empty, "ui-block-b")
        @Html.LabelStrong("InputUnit2", "AOH Unit:")
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                          Model.URIModels.Input.InputUnit2, "InputUnit2", GeneralRules.STRING, "75",
            "Input75Center", string.Empty)
        @Html.DivEnd()
        @Html.DivEnd()

        @Html.DivStart(string.Empty, "ui-grid-a")
        @Html.DivStart(string.Empty, "ui-block-a")
        @Html.LabelStrong("InputPrice3", "CAP Price:")
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                     Model.URIModels.Input.InputPrice3.ToString(), "InputPrice3", GeneralRules.DECIMAL, "8",
                "Input75Center", string.Empty)
        @Html.DivEnd()
        @Html.DivStart(string.Empty, "ui-block-b")
        @Html.LabelStrong("InputUnit3", "CAP Unit:")
        @Html.InputTextUpdate(Model.URIDataManager.EditViewEditType, searchurl,
                     Model.URIModels.Input.InputUnit3, "InputUnit3", GeneralRules.STRING, "75",
                "Input75Center", string.Empty)
        @Html.DivEnd()
        @Html.DivEnd()
    
        @HtmlHelperExtensions.MakeTextArea(Html, searchurl, Model.URIModels.Input.Description, "Description",
            "Description", Model.URIDataManager.EditViewEditType, "Text75H100PCW", "255")
        @HtmlHelperExtensions.WriteViewLinks(Html, searchurl, @Model.URIDataManager.ContentURIPattern, @Model.URIDataManager.CalcParams,
            Prices.INPUT_PRICE_TYPES.input.ToString(), "oldid")
        
    }
    
}